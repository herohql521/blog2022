(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{564:function(t,a,s){"use strict";s.r(a);var n=s(11),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"set-值为对象的时候-除非指向同一个引用-否则被认为是不同值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-值为对象的时候-除非指向同一个引用-否则被认为是不同值"}},[t._v("#")]),t._v(" Set 值为对象的时候，除非指向同一个引用，否则被认为是不同值")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mySet "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmySet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmySet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n")])])]),s("p",[t._v("因为")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n")])])]),s("h3",{attrs:{id:"set-值为nan的时候-nan-被认为是相同的-尽管-nan-nan"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-值为nan的时候-nan-被认为是相同的-尽管-nan-nan"}},[t._v("#")]),t._v(" Set 值为"),s("code",[t._v("NaN")]),t._v("的时候, NaN 被认为是相同的，尽管 NaN !== NaN")]),t._v(" "),s("h3",{attrs:{id:"有一段代码生成随机颜色的代码-1-24-math-random-0-tostring-16-如何理解-1-24和-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有一段代码生成随机颜色的代码-1-24-math-random-0-tostring-16-如何理解-1-24和-0"}},[t._v("#")]),t._v(" 有一段代码生成随机颜色的代码 "),s("code",[t._v('"#"+((1<<24)*Math.random()|0).toString(16)')]),t._v(", 如何理解 "),s("code",[t._v("1<<24")]),t._v("和"),s("code",[t._v("|0")])]),t._v(" "),s("p",[s("code",[t._v("1<<24")]),t._v("，先把1转为2进制，1的二进制还是1，然后向左移动24位，那么也就代表二进制1后面有24个0。换算成十进制就是16777216。")]),t._v(" "),s("p",[t._v("同理，计算"),s("code",[t._v("5<<2")]),t._v("，5的二进制是101，左移两位，那就是10100，将二进制10100转换为10进制，就是20，所以"),s("code",[t._v("5<<2")]),t._v("值就为20。")]),t._v(" "),s("p",[t._v("也可以理解"),s("code",[t._v("左移运算符")]),t._v("就是*2的n次方，"),s("code",[t._v("5 << 2 = 5 * 2^2 = 20")])]),t._v(" "),s("p",[s("code",[t._v("|0")]),t._v(" 单竖杠可以进行取整运算，只保留整数部分，小数部分舍掉。原理是转换为2进制之后相加得到的结果 "),s("code",[t._v("3|4")]),t._v("转换为二进制之后011|100  相加得到111=7")])])}),[],!1,null,null,null);a.default=e.exports}}]);